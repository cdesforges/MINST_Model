<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="batch_size" type="int" qualifier="builtins" value="32" />
<var name="best_loss" type="float" qualifier="builtins" value="0.027959274059252477" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="device" type="device" qualifier="torch" value="device%28type=%27mps%27%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="37" />
<var name="epochs" type="int" qualifier="builtins" value="50" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(32, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%5D%29" isContainer="True" shape="(32,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x135b6be50&gt;" isContainer="True" shape="313" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="CNN" qualifier="__main__" value="CNN%28%0A  %28layers%29%3A Sequential%28%0A    %280%29%3A Conv2d%281%2C 32%2C kernel_size=%283%2C 3%29%2C stride=%281%2C 1%29%2C padding=%281%2C 1%29%29%0A    %281%29%3A MaxPool2d%28kern...True%29%0A    %286%29%3A ReLU%28%29%0A    %287%29%3A Dropout%28p=0.5%2C inplace=False%29%0A    %288%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A  %29%0A%29" isContainer="True" />
<var name="no_improvement" type="int" qualifier="builtins" value="11" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0.0001%0A%29" isContainer="True" />
<var name="patience" type="int" qualifier="builtins" value="10" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x1075172b0&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.9917" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x135bb7af0&gt;" isContainer="True" shape="313" />
<var name="test_loss" type="float" qualifier="builtins" value="0.02802865667772503" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x125bbf280&gt;" isContainer="True" shape="1875" />
<var name="training_acc" type="float" qualifier="builtins" value="1.0" />
<var name="training_loss" type="float" qualifier="builtins" value="0.0004918445670137468" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
epoch 1 of 50: training_loss = 0.1991, training_accuracy = 0.9382, test_loss = 0.0534, test_accuracy = 0.9821, lr_size = 0.0010000000
epoch 2 of 50: training_loss = 0.0939, training_accuracy = 0.9716, test_loss = 0.0408, test_accuracy = 0.9867, lr_size = 0.0010000000
epoch 3 of 50: training_loss = 0.0788, training_accuracy = 0.9761, test_loss = 0.0387, test_accuracy = 0.9883, lr_size = 0.0010000000
epoch 4 of 50: training_loss = 0.0666, training_accuracy = 0.9795, test_loss = 0.0322, test_accuracy = 0.9903, lr_size = 0.0010000000
epoch 5 of 50: training_loss = 0.0620, training_accuracy = 0.9810, test_loss = 0.0290, test_accuracy = 0.9905, lr_size = 0.0010000000
epoch 6 of 50: training_loss = 0.0548, training_accuracy = 0.9832, test_loss = 0.0353, test_accuracy = 0.9899, lr_size = 0.0010000000
epoch 7 of 50: training_loss = 0.0553, training_accuracy = 0.9823, test_loss = 0.0375, test_accuracy = 0.9884, lr_size = 0.0010000000
epoch 8 of 50: training_loss = 0.0502, training_accuracy = 0.9846, test_loss = 0.0350, test_accuracy = 0.9895, lr_size = 0.0010000000
epoch 9 of 50: training_loss = 0.0493, training_accuracy = 0.9843, test_loss = 0.0362, test_accuracy = 0.9893, lr_size = 0.0010000000
epoch 10 of 50: training_loss = 0.0280, training_accuracy = 0.9912, test_loss = 0.0260, test_accuracy = 0.9920, lr_size = 0.0002000000
epoch 11 of 50: training_loss = 0.0204, training_accuracy = 0.9937, test_loss = 0.0255, test_accuracy = 0.9922, lr_size = 0.0002000000
epoch 12 of 50: training_loss = 0.0168, training_accuracy = 0.9944, test_loss = 0.0253, test_accuracy = 0.9917, lr_size = 0.0002000000
epoch 13 of 50: training_loss = 0.0153, training_accuracy = 0.9950, test_loss = 0.0269, test_accuracy = 0.9915, lr_size = 0.0002000000
epoch 14 of 50: training_loss = 0.0148, training_accuracy = 0.9954, test_loss = 0.0253, test_accuracy = 0.9928, lr_size = 0.0002000000
epoch 15 of 50: training_loss = 0.0137, training_accuracy = 0.9956, test_loss = 0.0287, test_accuracy = 0.9925, lr_size = 0.0002000000
epoch 16 of 50: training_loss = 0.0135, training_accuracy = 0.9955, test_loss = 0.0284, test_accuracy = 0.9910, lr_size = 0.0002000000
epoch 17 of 50: training_loss = 0.0103, training_accuracy = 0.9970, test_loss = 0.0274, test_accuracy = 0.9919, lr_size = 0.0000400000
epoch 18 of 50: training_loss = 0.0096, training_accuracy = 0.9971, test_loss = 0.0263, test_accuracy = 0.9923, lr_size = 0.0000400000
epoch 19 of 50: training_loss = 0.0087, training_accuracy = 0.9975, test_loss = 0.0261, test_accuracy = 0.9921, lr_size = 0.0000400000
epoch 20 of 50: training_loss = 0.0090, training_accuracy = 0.9972, test_loss = 0.0265, test_accuracy = 0.9927, lr_size = 0.0000400000
epoch 21 of 50: training_loss = 0.0084, training_accuracy = 0.9973, test_loss = 0.0260, test_accuracy = 0.9927, lr_size = 0.0000080000
epoch 22 of 50: training_loss = 0.0080, training_accuracy = 0.9977, test_loss = 0.0256, test_accuracy = 0.9926, lr_size = 0.0000080000
epoch 23 of 50: training_loss = 0.0075, training_accuracy = 0.9977, test_loss = 0.0257, test_accuracy = 0.9924, lr_size = 0.0000080000
