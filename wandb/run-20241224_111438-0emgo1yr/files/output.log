<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="MNIST_model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28fc2%29%3A Linear%28in_features=128%2C out_features=128%2C bias=True%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="batch_size" type="int" qualifier="builtins" value="128" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="22" />
<var name="epochs" type="int" qualifier="builtins" value="100" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(64, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x1518d98b0&gt;" isContainer="True" shape="157" />
<var name="fig" type="Figure" qualifier="matplotlib.figure" value="%3CFigure size 640x480 with 6 Axes&gt;" isContainer="True" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="i" type="int" qualifier="builtins" value="5" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28dropout1%29%3A Dropout%28p=0.5%2C inplace=Fals...e%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28dropout2%29%3A Dropout%28p=0.5%2C inplace=False%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0%0A%29" isContainer="True" />
<var name="outputs" type="Tensor" qualifier="torch" value="tensor%28%5B%5B-4.4979e%2B01%2C -3.6314e%2B01%2C -2.4818e%2B01%2C -1.2241e-01%2C -5.0165e%2B01%2C%0A         -3.6805e%2B01%2C -8.5459e%2B01%2C  4.2051e%2B01%2C -4.1...-4.7492e%2B01%2C -1.0279e%2B01%2C  3.9232e%2B01%2C -9.2660e%2B01%2C%0A         -4.2278e%2B01%2C -1.0490e%2B02%2C -3.3722e%2B01%2C -2.4868e%2B01%2C -2.3130e%2B01%5D%5D%29" isContainer="True" shape="(64, 10)" />
<var name="pred" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x1445cfdc0&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.962" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978fd0&gt;" isContainer="True" shape="79" />
<var name="test_loss" type="float" qualifier="builtins" value="0.12282220779953501" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978b50&gt;" isContainer="True" shape="469" />
<var name="training_acc" type="float" qualifier="builtins" value="0.9227" />
<var name="training_loss" type="float" qualifier="builtins" value="0.2530308275112211" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="MNIST_model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28fc2%29%3A Linear%28in_features=128%2C out_features=128%2C bias=True%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="batch_size" type="int" qualifier="builtins" value="128" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="22" />
<var name="epochs" type="int" qualifier="builtins" value="100" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(64, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x1518d98b0&gt;" isContainer="True" shape="157" />
<var name="fig" type="Figure" qualifier="matplotlib.figure" value="%3CFigure size 640x480 with 6 Axes&gt;" isContainer="True" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="i" type="int" qualifier="builtins" value="5" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28dropout1%29%3A Dropout%28p=0.5%2C inplace=Fals...e%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28dropout2%29%3A Dropout%28p=0.5%2C inplace=False%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0%0A%29" isContainer="True" />
<var name="outputs" type="Tensor" qualifier="torch" value="tensor%28%5B%5B-4.4979e%2B01%2C -3.6314e%2B01%2C -2.4818e%2B01%2C -1.2241e-01%2C -5.0165e%2B01%2C%0A         -3.6805e%2B01%2C -8.5459e%2B01%2C  4.2051e%2B01%2C -4.1...-4.7492e%2B01%2C -1.0279e%2B01%2C  3.9232e%2B01%2C -9.2660e%2B01%2C%0A         -4.2278e%2B01%2C -1.0490e%2B02%2C -3.3722e%2B01%2C -2.4868e%2B01%2C -2.3130e%2B01%5D%5D%29" isContainer="True" shape="(64, 10)" />
<var name="pred" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x1445cfdc0&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.962" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978fd0&gt;" isContainer="True" shape="79" />
<var name="test_loss" type="float" qualifier="builtins" value="0.12282220779953501" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978b50&gt;" isContainer="True" shape="469" />
<var name="training_acc" type="float" qualifier="builtins" value="0.9227" />
<var name="training_loss" type="float" qualifier="builtins" value="0.2530308275112211" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="MNIST_model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28fc2%29%3A Linear%28in_features=128%2C out_features=128%2C bias=True%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="batch_size" type="int" qualifier="builtins" value="128" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="22" />
<var name="epochs" type="int" qualifier="builtins" value="100" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(64, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x1518d98b0&gt;" isContainer="True" shape="157" />
<var name="fig" type="Figure" qualifier="matplotlib.figure" value="%3CFigure size 640x480 with 6 Axes&gt;" isContainer="True" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="i" type="int" qualifier="builtins" value="5" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28dropout1%29%3A Dropout%28p=0.5%2C inplace=Fals...e%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28dropout2%29%3A Dropout%28p=0.5%2C inplace=False%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0%0A%29" isContainer="True" />
<var name="outputs" type="Tensor" qualifier="torch" value="tensor%28%5B%5B-4.4979e%2B01%2C -3.6314e%2B01%2C -2.4818e%2B01%2C -1.2241e-01%2C -5.0165e%2B01%2C%0A         -3.6805e%2B01%2C -8.5459e%2B01%2C  4.2051e%2B01%2C -4.1...-4.7492e%2B01%2C -1.0279e%2B01%2C  3.9232e%2B01%2C -9.2660e%2B01%2C%0A         -4.2278e%2B01%2C -1.0490e%2B02%2C -3.3722e%2B01%2C -2.4868e%2B01%2C -2.3130e%2B01%5D%5D%29" isContainer="True" shape="(64, 10)" />
<var name="pred" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x1445cfdc0&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.962" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978fd0&gt;" isContainer="True" shape="79" />
<var name="test_loss" type="float" qualifier="builtins" value="0.12282220779953501" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x151978b50&gt;" isContainer="True" shape="469" />
<var name="training_acc" type="float" qualifier="builtins" value="0.9227" />
<var name="training_loss" type="float" qualifier="builtins" value="0.2530308275112211" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="MNIST_model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28fc2%29%3A Linear%28in_features=128%2C out_features=128%2C bias=True%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="batch_size" type="int" qualifier="builtins" value="128" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="22" />
<var name="epochs" type="int" qualifier="builtins" value="100" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(64, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x1518d98b0&gt;" isContainer="True" shape="157" />
<var name="fig" type="Figure" qualifier="matplotlib.figure" value="%3CFigure size 640x480 with 6 Axes&gt;" isContainer="True" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="i" type="int" qualifier="builtins" value="5" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28dropout1%29%3A Dropout%28p=0.2%2C inplace=Fals...e%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28dropout2%29%3A Dropout%28p=0.2%2C inplace=False%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0%0A%29" isContainer="True" />
<var name="outputs" type="Tensor" qualifier="torch" value="tensor%28%5B%5B-4.4979e%2B01%2C -3.6314e%2B01%2C -2.4818e%2B01%2C -1.2241e-01%2C -5.0165e%2B01%2C%0A         -3.6805e%2B01%2C -8.5459e%2B01%2C  4.2051e%2B01%2C -4.1...-4.7492e%2B01%2C -1.0279e%2B01%2C  3.9232e%2B01%2C -9.2660e%2B01%2C%0A         -4.2278e%2B01%2C -1.0490e%2B02%2C -3.3722e%2B01%2C -2.4868e%2B01%2C -2.3130e%2B01%5D%5D%29" isContainer="True" shape="(64, 10)" />
<var name="pred" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x152567520&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.962" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x15353f100&gt;" isContainer="True" shape="79" />
<var name="test_loss" type="float" qualifier="builtins" value="0.12282220779953501" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x15353f520&gt;" isContainer="True" shape="469" />
<var name="training_acc" type="float" qualifier="builtins" value="0.9227" />
<var name="training_loss" type="float" qualifier="builtins" value="0.2530308275112211" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
<xml><var name="_dummy_ipython_val"  />
<var name="_dummy_special_var"  />
<var name="MNIST_model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28fc2%29%3A Linear%28in_features=128%2C out_features=128%2C bias=True%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="batch_size" type="int" qualifier="builtins" value="128" />
<var name="criterion" type="CrossEntropyLoss" qualifier="torch.nn.modules.loss" value="CrossEntropyLoss%28%29" isContainer="True" />
<var name="epoch" type="int" qualifier="builtins" value="22" />
<var name="epochs" type="int" qualifier="builtins" value="100" />
<var name="example_data" type="Tensor" qualifier="torch" value="tensor%28%5B%5B%5B%5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ......%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%2C%0A          %5B-1.%2C -1.%2C -1.%2C  ...%2C -1.%2C -1.%2C -1.%5D%5D%5D%5D%29" isContainer="True" shape="(64, 1, 28, 28)" />
<var name="example_labels" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="examples" type="_SingleProcessDataLoaderIter" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x1518d98b0&gt;" isContainer="True" shape="157" />
<var name="fig" type="Figure" qualifier="matplotlib.figure" value="%3CFigure size 640x480 with 6 Axes&gt;" isContainer="True" />
<var name="hidden_size" type="int" qualifier="builtins" value="128" />
<var name="i" type="int" qualifier="builtins" value="5" />
<var name="learning_rate" type="float" qualifier="builtins" value="0.001" />
<var name="model" type="MLP" qualifier="__main__" value="MLP%28%0A  %28fc1%29%3A Linear%28in_features=784%2C out_features=128%2C bias=True%29%0A  %28relu1%29%3A ReLU%28%29%0A  %28dropout1%29%3A Dropout%28p=0.2%2C inplace=Fals...e%29%0A  %28relu2%29%3A ReLU%28%29%0A  %28dropout2%29%3A Dropout%28p=0.2%2C inplace=False%29%0A  %28fc3%29%3A Linear%28in_features=128%2C out_features=10%2C bias=True%29%0A%29" isContainer="True" />
<var name="optimizer" type="Adam" qualifier="torch.optim.adam" value="Adam %28%0AParameter Group 0%0A    amsgrad%3A False%0A    betas%3A %280.9%2C 0.999%29%0A    capturable%3A False%0A    differentiable%3A False%0A    eps%3A 1e-08%0A    foreach%3A None%0A    fused%3A None%0A    lr%3A 0.001%0A    maximize%3A False%0A    weight_decay%3A 0%0A%29" isContainer="True" />
<var name="outputs" type="Tensor" qualifier="torch" value="tensor%28%5B%5B-4.4979e%2B01%2C -3.6314e%2B01%2C -2.4818e%2B01%2C -1.2241e-01%2C -5.0165e%2B01%2C%0A         -3.6805e%2B01%2C -8.5459e%2B01%2C  4.2051e%2B01%2C -4.1...-4.7492e%2B01%2C -1.0279e%2B01%2C  3.9232e%2B01%2C -9.2660e%2B01%2C%0A         -4.2278e%2B01%2C -1.0490e%2B02%2C -3.3722e%2B01%2C -2.4868e%2B01%2C -2.3130e%2B01%5D%5D%29" isContainer="True" shape="(64, 10)" />
<var name="pred" type="Tensor" qualifier="torch" value="tensor%28%5B7%2C 2%2C 1%2C 0%2C 4%2C 1%2C 4%2C 9%2C 5%2C 9%2C 0%2C 6%2C 9%2C 0%2C 1%2C 5%2C 9%2C 7%2C 3%2C 4%2C 9%2C 6%2C 6%2C 5%2C%0A        4%2C 0%2C 7%2C 4%2C 0%2C 1%2C 3%2C 1%2C 3%2C 4%2C 7%2C 2%2C 7%2C 1%2C 2%2C 1%2C 1%2C 7%2C 4%2C 2%2C 3%2C 5%2C 1%2C 2%2C%0A        4%2C 4%2C 6%2C 3%2C 5%2C 5%2C 6%2C 0%2C 4%2C 1%2C 9%2C 5%2C 7%2C 8%2C 9%2C 3%5D%29" isContainer="True" shape="(64,)" />
<var name="scheduler" type="ReduceLROnPlateau" qualifier="torch.optim.lr_scheduler" value="%3Ctorch.optim.lr_scheduler.ReduceLROnPlateau object at 0x152567520&gt;" isContainer="True" />
<var name="test_acc" type="float" qualifier="builtins" value="0.962" />
<var name="test_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 10000%0A    Root location%3A ./data%0A    Split%3A Test%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="10000" />
<var name="test_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x15353f100&gt;" isContainer="True" shape="79" />
<var name="test_loss" type="float" qualifier="builtins" value="0.12282220779953501" />
<var name="train_dataset" type="MNIST" qualifier="torchvision.datasets.mnist" value="Dataset MNIST%0A    Number of datapoints%3A 60000%0A    Root location%3A ./data%0A    Split%3A Train%0A    StandardTransform%0ATransform%3A Compose%28%0A               ToTensor%28%29%0A               Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A           %29" isContainer="True" shape="60000" />
<var name="train_loader" type="DataLoader" qualifier="torch.utils.data.dataloader" value="%3Ctorch.utils.data.dataloader.DataLoader object at 0x15353f520&gt;" isContainer="True" shape="469" />
<var name="training_acc" type="float" qualifier="builtins" value="0.9227" />
<var name="training_loss" type="float" qualifier="builtins" value="0.2530308275112211" />
<var name="transform" type="Compose" qualifier="torchvision.transforms.transforms" value="Compose%28%0A    ToTensor%28%29%0A    Normalize%28mean=%280.5%2C%29%2C std=%280.5%2C%29%29%0A%29" isContainer="True" />
</xml>
epoch 1 of 100: training_loss = 0.4951, training_accuracy = 0.8473, test_loss = 0.2073, test_accuracy = 0.9339, lr_size = 0.0010000000
epoch 2 of 100: training_loss = 0.2384, training_accuracy = 0.9274, test_loss = 0.1461, test_accuracy = 0.9531, lr_size = 0.0010000000
epoch 3 of 100: training_loss = 0.1900, training_accuracy = 0.9414, test_loss = 0.1349, test_accuracy = 0.9559, lr_size = 0.0010000000
epoch 4 of 100: training_loss = 0.1635, training_accuracy = 0.9500, test_loss = 0.1148, test_accuracy = 0.9630, lr_size = 0.0010000000
epoch 5 of 100: training_loss = 0.1485, training_accuracy = 0.9544, test_loss = 0.1065, test_accuracy = 0.9656, lr_size = 0.0010000000
epoch 6 of 100: training_loss = 0.1365, training_accuracy = 0.9580, test_loss = 0.1030, test_accuracy = 0.9665, lr_size = 0.0010000000
epoch 7 of 100: training_loss = 0.1289, training_accuracy = 0.9600, test_loss = 0.0920, test_accuracy = 0.9698, lr_size = 0.0010000000
epoch 8 of 100: training_loss = 0.1225, training_accuracy = 0.9620, test_loss = 0.0930, test_accuracy = 0.9712, lr_size = 0.0010000000
epoch 9 of 100: training_loss = 0.1203, training_accuracy = 0.9630, test_loss = 0.0943, test_accuracy = 0.9687, lr_size = 0.0010000000
epoch 10 of 100: training_loss = 0.1109, training_accuracy = 0.9655, test_loss = 0.0838, test_accuracy = 0.9748, lr_size = 0.0010000000
epoch 11 of 100: training_loss = 0.1063, training_accuracy = 0.9666, test_loss = 0.0788, test_accuracy = 0.9738, lr_size = 0.0010000000
epoch 12 of 100: training_loss = 0.1002, training_accuracy = 0.9684, test_loss = 0.0829, test_accuracy = 0.9724, lr_size = 0.0010000000
epoch 13 of 100: training_loss = 0.1007, training_accuracy = 0.9685, test_loss = 0.0723, test_accuracy = 0.9766, lr_size = 0.0010000000
epoch 14 of 100: training_loss = 0.0962, training_accuracy = 0.9694, test_loss = 0.0751, test_accuracy = 0.9758, lr_size = 0.0010000000
epoch 15 of 100: training_loss = 0.0943, training_accuracy = 0.9691, test_loss = 0.0845, test_accuracy = 0.9717, lr_size = 0.0010000000
epoch 16 of 100: training_loss = 0.0930, training_accuracy = 0.9696, test_loss = 0.0793, test_accuracy = 0.9753, lr_size = 0.0010000000
epoch 17 of 100: training_loss = 0.0893, training_accuracy = 0.9711, test_loss = 0.0803, test_accuracy = 0.9747, lr_size = 0.0010000000
epoch 18 of 100: training_loss = 0.0882, training_accuracy = 0.9718, test_loss = 0.0794, test_accuracy = 0.9764, lr_size = 0.0010000000
epoch 19 of 100: training_loss = 0.0860, training_accuracy = 0.9721, test_loss = 0.0703, test_accuracy = 0.9780, lr_size = 0.0010000000
epoch 20 of 100: training_loss = 0.0832, training_accuracy = 0.9726, test_loss = 0.0814, test_accuracy = 0.9752, lr_size = 0.0010000000
epoch 21 of 100: training_loss = 0.0849, training_accuracy = 0.9729, test_loss = 0.0747, test_accuracy = 0.9767, lr_size = 0.0010000000
epoch 22 of 100: training_loss = 0.0805, training_accuracy = 0.9738, test_loss = 0.0724, test_accuracy = 0.9768, lr_size = 0.0010000000
epoch 23 of 100: training_loss = 0.0774, training_accuracy = 0.9741, test_loss = 0.0785, test_accuracy = 0.9759, lr_size = 0.0010000000
epoch 24 of 100: training_loss = 0.0776, training_accuracy = 0.9745, test_loss = 0.0702, test_accuracy = 0.9775, lr_size = 0.0010000000
epoch 25 of 100: training_loss = 0.0781, training_accuracy = 0.9747, test_loss = 0.0802, test_accuracy = 0.9751, lr_size = 0.0010000000
epoch 26 of 100: training_loss = 0.0750, training_accuracy = 0.9759, test_loss = 0.0732, test_accuracy = 0.9768, lr_size = 0.0010000000
epoch 27 of 100: training_loss = 0.0734, training_accuracy = 0.9756, test_loss = 0.0701, test_accuracy = 0.9786, lr_size = 0.0010000000
epoch 28 of 100: training_loss = 0.0775, training_accuracy = 0.9755, test_loss = 0.0768, test_accuracy = 0.9780, lr_size = 0.0010000000
epoch 29 of 100: training_loss = 0.0698, training_accuracy = 0.9769, test_loss = 0.0751, test_accuracy = 0.9777, lr_size = 0.0010000000
epoch 30 of 100: training_loss = 0.0729, training_accuracy = 0.9762, test_loss = 0.0753, test_accuracy = 0.9772, lr_size = 0.0010000000
epoch 31 of 100: training_loss = 0.0704, training_accuracy = 0.9776, test_loss = 0.0708, test_accuracy = 0.9777, lr_size = 0.0010000000
epoch 32 of 100: training_loss = 0.0679, training_accuracy = 0.9775, test_loss = 0.0715, test_accuracy = 0.9779, lr_size = 0.0010000000
epoch 33 of 100: training_loss = 0.0660, training_accuracy = 0.9781, test_loss = 0.0700, test_accuracy = 0.9802, lr_size = 0.0010000000
epoch 34 of 100: training_loss = 0.0659, training_accuracy = 0.9787, test_loss = 0.0693, test_accuracy = 0.9794, lr_size = 0.0010000000
epoch 35 of 100: training_loss = 0.0652, training_accuracy = 0.9783, test_loss = 0.0741, test_accuracy = 0.9795, lr_size = 0.0010000000
epoch 36 of 100: training_loss = 0.0677, training_accuracy = 0.9786, test_loss = 0.0704, test_accuracy = 0.9807, lr_size = 0.0010000000
epoch 37 of 100: training_loss = 0.0628, training_accuracy = 0.9788, test_loss = 0.0685, test_accuracy = 0.9806, lr_size = 0.0010000000
epoch 38 of 100: training_loss = 0.0668, training_accuracy = 0.9781, test_loss = 0.0771, test_accuracy = 0.9782, lr_size = 0.0010000000
epoch 39 of 100: training_loss = 0.0625, training_accuracy = 0.9798, test_loss = 0.0760, test_accuracy = 0.9780, lr_size = 0.0010000000
epoch 40 of 100: training_loss = 0.0643, training_accuracy = 0.9787, test_loss = 0.0704, test_accuracy = 0.9795, lr_size = 0.0010000000
epoch 41 of 100: training_loss = 0.0591, training_accuracy = 0.9805, test_loss = 0.0709, test_accuracy = 0.9795, lr_size = 0.0010000000
epoch 42 of 100: training_loss = 0.0653, training_accuracy = 0.9781, test_loss = 0.0719, test_accuracy = 0.9795, lr_size = 0.0010000000
epoch 43 of 100: training_loss = 0.0615, training_accuracy = 0.9804, test_loss = 0.0695, test_accuracy = 0.9810, lr_size = 0.0010000000
epoch 44 of 100: training_loss = 0.0626, training_accuracy = 0.9797, test_loss = 0.0676, test_accuracy = 0.9797, lr_size = 0.0010000000
epoch 45 of 100: training_loss = 0.0596, training_accuracy = 0.9806, test_loss = 0.0723, test_accuracy = 0.9794, lr_size = 0.0010000000
epoch 46 of 100: training_loss = 0.0577, training_accuracy = 0.9811, test_loss = 0.0747, test_accuracy = 0.9796, lr_size = 0.0010000000
epoch 47 of 100: training_loss = 0.0603, training_accuracy = 0.9802, test_loss = 0.0699, test_accuracy = 0.9814, lr_size = 0.0010000000
epoch 48 of 100: training_loss = 0.0559, training_accuracy = 0.9816, test_loss = 0.0714, test_accuracy = 0.9801, lr_size = 0.0010000000
epoch 49 of 100: training_loss = 0.0593, training_accuracy = 0.9808, test_loss = 0.0697, test_accuracy = 0.9798, lr_size = 0.0010000000
epoch 50 of 100: training_loss = 0.0569, training_accuracy = 0.9811, test_loss = 0.0733, test_accuracy = 0.9786, lr_size = 0.0010000000
epoch 51 of 100: training_loss = 0.0556, training_accuracy = 0.9814, test_loss = 0.0805, test_accuracy = 0.9779, lr_size = 0.0010000000
epoch 52 of 100: training_loss = 0.0578, training_accuracy = 0.9810, test_loss = 0.0734, test_accuracy = 0.9800, lr_size = 0.0010000000
epoch 53 of 100: training_loss = 0.0566, training_accuracy = 0.9810, test_loss = 0.0776, test_accuracy = 0.9779, lr_size = 0.0010000000
epoch 54 of 100: training_loss = 0.0552, training_accuracy = 0.9817, test_loss = 0.0743, test_accuracy = 0.9796, lr_size = 0.0010000000
epoch 55 of 100: training_loss = 0.0567, training_accuracy = 0.9815, test_loss = 0.0722, test_accuracy = 0.9794, lr_size = 0.0010000000
epoch 56 of 100: training_loss = 0.0433, training_accuracy = 0.9857, test_loss = 0.0647, test_accuracy = 0.9831, lr_size = 0.0005000000
epoch 57 of 100: training_loss = 0.0396, training_accuracy = 0.9869, test_loss = 0.0672, test_accuracy = 0.9815, lr_size = 0.0005000000
epoch 58 of 100: training_loss = 0.0393, training_accuracy = 0.9870, test_loss = 0.0692, test_accuracy = 0.9813, lr_size = 0.0005000000
epoch 59 of 100: training_loss = 0.0397, training_accuracy = 0.9869, test_loss = 0.0655, test_accuracy = 0.9830, lr_size = 0.0005000000
epoch 60 of 100: training_loss = 0.0401, training_accuracy = 0.9868, test_loss = 0.0690, test_accuracy = 0.9814, lr_size = 0.0005000000
epoch 61 of 100: training_loss = 0.0371, training_accuracy = 0.9881, test_loss = 0.0655, test_accuracy = 0.9828, lr_size = 0.0005000000
epoch 62 of 100: training_loss = 0.0382, training_accuracy = 0.9871, test_loss = 0.0705, test_accuracy = 0.9804, lr_size = 0.0005000000
epoch 63 of 100: training_loss = 0.0392, training_accuracy = 0.9870, test_loss = 0.0659, test_accuracy = 0.9824, lr_size = 0.0005000000
epoch 64 of 100: training_loss = 0.0381, training_accuracy = 0.9877, test_loss = 0.0653, test_accuracy = 0.9828, lr_size = 0.0005000000
epoch 65 of 100: training_loss = 0.0382, training_accuracy = 0.9874, test_loss = 0.0659, test_accuracy = 0.9826, lr_size = 0.0005000000
epoch 66 of 100: training_loss = 0.0387, training_accuracy = 0.9867, test_loss = 0.0668, test_accuracy = 0.9825, lr_size = 0.0005000000
epoch 67 of 100: training_loss = 0.0399, training_accuracy = 0.9869, test_loss = 0.0647, test_accuracy = 0.9833, lr_size = 0.0005000000
epoch 68 of 100: training_loss = 0.0365, training_accuracy = 0.9882, test_loss = 0.0642, test_accuracy = 0.9820, lr_size = 0.0005000000
epoch 69 of 100: training_loss = 0.0355, training_accuracy = 0.9881, test_loss = 0.0652, test_accuracy = 0.9830, lr_size = 0.0005000000
epoch 70 of 100: training_loss = 0.0344, training_accuracy = 0.9886, test_loss = 0.0663, test_accuracy = 0.9826, lr_size = 0.0005000000
epoch 71 of 100: training_loss = 0.0371, training_accuracy = 0.9871, test_loss = 0.0651, test_accuracy = 0.9820, lr_size = 0.0005000000
epoch 72 of 100: training_loss = 0.0373, training_accuracy = 0.9871, test_loss = 0.0645, test_accuracy = 0.9836, lr_size = 0.0005000000
epoch 73 of 100: training_loss = 0.0337, training_accuracy = 0.9889, test_loss = 0.0674, test_accuracy = 0.9825, lr_size = 0.0005000000
epoch 74 of 100: training_loss = 0.0357, training_accuracy = 0.9884, test_loss = 0.0684, test_accuracy = 0.9819, lr_size = 0.0005000000
epoch 75 of 100: training_loss = 0.0338, training_accuracy = 0.9886, test_loss = 0.0670, test_accuracy = 0.9830, lr_size = 0.0005000000
epoch 76 of 100: training_loss = 0.0353, training_accuracy = 0.9889, test_loss = 0.0636, test_accuracy = 0.9831, lr_size = 0.0005000000
epoch 77 of 100: training_loss = 0.0365, training_accuracy = 0.9879, test_loss = 0.0638, test_accuracy = 0.9817, lr_size = 0.0005000000
epoch 78 of 100: training_loss = 0.0358, training_accuracy = 0.9881, test_loss = 0.0663, test_accuracy = 0.9813, lr_size = 0.0005000000
epoch 79 of 100: training_loss = 0.0335, training_accuracy = 0.9886, test_loss = 0.0731, test_accuracy = 0.9805, lr_size = 0.0005000000
epoch 80 of 100: training_loss = 0.0350, training_accuracy = 0.9884, test_loss = 0.0676, test_accuracy = 0.9824, lr_size = 0.0005000000
epoch 81 of 100: training_loss = 0.0345, training_accuracy = 0.9887, test_loss = 0.0629, test_accuracy = 0.9824, lr_size = 0.0005000000
epoch 82 of 100: training_loss = 0.0329, training_accuracy = 0.9893, test_loss = 0.0663, test_accuracy = 0.9820, lr_size = 0.0005000000
epoch 83 of 100: training_loss = 0.0346, training_accuracy = 0.9885, test_loss = 0.0646, test_accuracy = 0.9826, lr_size = 0.0005000000
epoch 84 of 100: training_loss = 0.0360, training_accuracy = 0.9882, test_loss = 0.0617, test_accuracy = 0.9821, lr_size = 0.0005000000
epoch 85 of 100: training_loss = 0.0361, training_accuracy = 0.9883, test_loss = 0.0669, test_accuracy = 0.9830, lr_size = 0.0005000000
epoch 86 of 100: training_loss = 0.0338, training_accuracy = 0.9886, test_loss = 0.0629, test_accuracy = 0.9827, lr_size = 0.0005000000
epoch 87 of 100: training_loss = 0.0336, training_accuracy = 0.9894, test_loss = 0.0697, test_accuracy = 0.9814, lr_size = 0.0005000000
epoch 88 of 100: training_loss = 0.0322, training_accuracy = 0.9893, test_loss = 0.0693, test_accuracy = 0.9814, lr_size = 0.0005000000
epoch 89 of 100: training_loss = 0.0335, training_accuracy = 0.9890, test_loss = 0.0675, test_accuracy = 0.9829, lr_size = 0.0005000000
epoch 90 of 100: training_loss = 0.0323, training_accuracy = 0.9890, test_loss = 0.0712, test_accuracy = 0.9827, lr_size = 0.0005000000
epoch 91 of 100: training_loss = 0.0350, training_accuracy = 0.9886, test_loss = 0.0654, test_accuracy = 0.9832, lr_size = 0.0005000000
epoch 92 of 100: training_loss = 0.0325, training_accuracy = 0.9893, test_loss = 0.0638, test_accuracy = 0.9830, lr_size = 0.0005000000
epoch 93 of 100: training_loss = 0.0340, training_accuracy = 0.9882, test_loss = 0.0698, test_accuracy = 0.9825, lr_size = 0.0005000000
epoch 94 of 100: training_loss = 0.0303, training_accuracy = 0.9895, test_loss = 0.0683, test_accuracy = 0.9825, lr_size = 0.0005000000
epoch 95 of 100: training_loss = 0.0337, training_accuracy = 0.9881, test_loss = 0.0683, test_accuracy = 0.9828, lr_size = 0.0005000000
epoch 96 of 100: training_loss = 0.0258, training_accuracy = 0.9913, test_loss = 0.0636, test_accuracy = 0.9825, lr_size = 0.0002500000
epoch 97 of 100: training_loss = 0.0256, training_accuracy = 0.9917, test_loss = 0.0652, test_accuracy = 0.9829, lr_size = 0.0002500000
epoch 98 of 100: training_loss = 0.0250, training_accuracy = 0.9917, test_loss = 0.0638, test_accuracy = 0.9838, lr_size = 0.0002500000
epoch 99 of 100: training_loss = 0.0261, training_accuracy = 0.9912, test_loss = 0.0653, test_accuracy = 0.9835, lr_size = 0.0002500000
epoch 100 of 100: training_loss = 0.0241, training_accuracy = 0.9919, test_loss = 0.0667, test_accuracy = 0.9819, lr_size = 0.0002500000
